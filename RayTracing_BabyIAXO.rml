<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<TRestManager name="RESTManagerSim" title="Template manager to process a simulation generated by restG4." verboseLevel="info">
    <globals>
        <parameter name="verboseLevel" value="essential"/>
        <constant name="opticsPosition" value="7000"/>
        <constant name="focalPosition" value="7538"/>
        <variable name="fieldName" value = "babyIAXO_2024_cutoff"/>
        <!--<variable name="BMaps" value = "Mentink_202401_cutoff(6,-6)"/>-->
        <variable name="REST_YAW" value="0"/>
        <variable name="REST_TAG" value="None"/>
        <variable name="REST_EVENTS" value="1000000"/>
        <variable name="REST_VACUUM" value="false"/>
        <variable name="REST_GAS" value="Helium"/>
        <variable name="REST_AXION_MASS" value="1e-3"/>
        <!-- <variable name="CONDOR_RUN" value="auto"/> -->
    </globals>
    <TRestRun name="axionRun" title="BabyIAXO V1.0" verboseLevel="info">
        <parameter name="experimentName" value="BabyIAXO"/>
        <parameter name="runType" value="rayTracing"/>
		<parameter name="runNumber" value="auto"/>
		<if condition="${REST_VACUUM}==false" >
			<parameter name="runTag" value="Primakoff_XMM_mM_[fRunNumber]"/>
		</if>
		<if condition="${REST_VACUUM}==true" >
			<parameter name="runTag" value="Primakoff_Vaccum_XMM_mM_[fRunNumber]"/>
		</if>
        <parameter name="runDescription" value=""/>
        <parameter name="user" value="${USER}"/>
        <parameter name="verboseLevel" value="2"/>
	<parameter name="outputFileName" value="RunSolarFlux_[fRunType]_[fRunTag]_${USER}_V[fVersion].root"/>

        <TRestAxionSolarQCDFlux file="fluxes.rml" name="LennertHoofPrimakoff"/>

        <TRestAxionMagneticField file="fields.rml" name="${fieldName}" />

		<if condition="${REST_VACUUM}==false" >
			<TRestAxionBufferGas name="${REST_GAS}" verboseLevel="warning">
				<gas name="He" density="2.9836e-10kg/mm^3"/>
			</TRestAxionBufferGas>
		</if>

        <TRestAxionTrueWolterOptics file="xmmTrueWolter.rml" name="xmm"/>

        <TRestAxionXrayWindow name="magnetBoreWindow" material="Vacuum">
            <TRestPatternMask name="mask" maskRadius="35cm" verboseLevel="info"/>
        </TRestAxionXrayWindow>

        <TRestAxionXrayWindow file="windows.rml" name="MicromegasAluminumFoil"/>
        <TRestAxionXrayWindow file="windows.rml" name="MicromegasStrongBack"/>
        <TRestAxionXrayWindow file="windows.rml" name="MicromegasMylar"/>
    </TRestRun>

    <TRestProcessRunner name="EventProcess" verboseLevel="info">
		<parameter name="eventsToProcess" value="${REST_EVENTS}"/>
        <!-- By default the generator will place the Z-position at 1 A.U. -->
        <addProcess type="TRestAxionGeneratorProcess" name="axionGen">
            <parameter name="generatorType" value="solarFlux"/>
            <parameter name="targetRadius" value="35cm"/>
            <parameter name="seed" value="0"/>
			<parameter name="axionMassRange" value="(${REST_AXION_MASS},${REST_AXION_MASS})eV"/>
        </addProcess>
        <addProcess type="TRestAxionAnalysisProcess" name="initial" observables="all" value="OFF"/>

        <!-- We do not need to transport the axion. It is just to evaluate the axion at a given Z-position using the analysis process -->
        <addProcess type="TRestAxionTransportProcess" zPosition="-11m" name="tom5m" value="ON"/>
        <addProcess type="TRestAxionAnalysisProcess" name="magnetEntrance" value="ON">
            <observable name="posX"/>
            <observable name="posY"/>
            <observable name="posZ"/>
            <observable name="R"/>
        </addProcess>

        <addProcess type="TRestAxionFieldPropagationProcess" name="axionPhoton" integrationStep="5cm" position="(0,0,-5)m" bufferGasAdditionalLength="5m" observables="all" verboseLevel="info"/>
        <!-- Checking the generator target defined by TRestAxionGeneratorProcess -->
        <addProcess type="TRestAxionTransportProcess" zPosition="0" name="origin" value="OFF"/>
        <addProcess type="TRestAxionAnalysisProcess" name="magnetExit" value="OFF">
            <observable name="posX"/>
            <observable name="posY"/>
            <observable name="posZ"/>
            <observable name="R"/>
        </addProcess>

        <addProcess type="TRestAxionTransmissionProcess" name="boreExitGate" position="(0,0,0)m">
            <window name="magnetBoreWindow"/>
        </addProcess>
        <addProcess type="TRestAxionOpticsProcess" name="optics" position="(0,0,opticsPosition)mm">
            <parameter name="yaw" value="${REST_YAW}degrees"/>
            <parameter name="opticalAxis" value="false"/>
            <observable name="efficiency" value="ON"/>
        </addProcess>
        <addProcess type="TRestAxionAnalysisProcess" name="afterOptics" value="ON">
            <observable name="posX"/>
            <observable name="posY"/>
            <observable name="posZ"/>
            <observable name="R"/>
        </addProcess>

        <addProcess type="TRestAxionTransportProcess" zPosition="focalPosition" name="focal" value="ON"/>
        <addProcess type="TRestAxionAnalysisProcess" name="afterFocal" value="ON">
            <observable name="posX"/>
            <observable name="posY"/>
            <observable name="posZ"/>
            <observable name="R"/>
        </addProcess>

        <addProcess type="TRestAxionTransmissionProcess" name="window" position="(0,0,focalPosition + opticsPosition)mm">
            <window name="MicromegasMylar"/>
            <window name="MicromegasStrongBack"/>
            <window name="MicromegasAluminumFoil"/>
        </addProcess>

        <addProcess type="TRestAxionTransportProcess" zPosition="focalPosition+opticsPosition-500" name="origin" value="OFF"/>
        <addProcess type="TRestAxionAnalysisProcess" name="offset" value="OFF">
            <observable name="posX"/>
            <observable name="posY"/>
            <observable name="posZ"/>
            <observable name="R"/>
        </addProcess>

        <addProcess type="TRestAxionTransportProcess" zPosition="focalPosition+opticsPosition" name="origin" value="ON"/>
		<addProcess type="TRestAxionAnalysisProcess" name="final" observables="all" value="ON"/>
    </TRestProcessRunner>
    <addTask command="EventProcess-&gt;RunProcess()" value="ON"/>
</TRestManager>
